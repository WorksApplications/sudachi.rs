name: Python Binary Packages

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-linux-wheels:
    name: Build Linux Python Wheels (+PGO)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download dictionary
        run: bash fetch_dictionary.sh

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: eiennohito/gha-manylinux-build@master
        with:
          script: python/build-wheels-manylinux-pgo.sh

      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*manylinux*

  build-non-linux-wheels:
    name: Build wheels on ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-11]
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools setuptools_rust wheel

      - name: build wheel
        run: |
          cd python && python setup.py bdist_wheel
        env:
          MACOSX_DEPLOYMENT_TARGET: 11


      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*.whl