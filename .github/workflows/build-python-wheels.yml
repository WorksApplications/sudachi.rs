name: Python Packages

on:
  push:
    branches: [ develop ]
    tags: [ "v*" ]
  pull_request:
    branches: [ develop ]

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools setuptools-rust

      - name: Build
        working-directory: ./python
        run: bash build-sdist.sh

      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*

  build-linux-wheels:
    name: Build Linux Python Wheels (+PGO)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download dictionary
        run: bash fetch_dictionary.sh

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: eiennohito/gha-manylinux-build@master
        with:
          script: python/build-wheels-manylinux-pgo.sh

      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*manylinux*

  build-non-linux-wheels:
    name: Build wheels on ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [ "3.6", "3.7", "3.8", "3.9" , "3.10" ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools setuptools_rust wheel

      - name: build wheel
        run: |
          cd python && python setup.py bdist_wheel
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.12

      - uses: actions/upload-artifact@v2
        with:
          path: python/dist/*.whl

  upload-to-pypi: # run only if all have succeeded
    needs: [ build-sdist, build-non-linux-wheels, build-linux-wheels ]
    if: startsWith(github.ref, 'refs/tags/v') # only for tags
    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install twine
        run: |
          python -m pip install --upgrade twine

      - uses: actions/download-artifact@v2
        with:
          path: dist/

      - name: Upload to PyPi
        working-directory: ./python
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run:
          twine upload dist/*